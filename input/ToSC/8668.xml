<oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/  http://www.openarchives.org/OAI/2.0/oai_dc.xsd"><id>8668</id>
	<dc:title xml:lang="en-US">Key Assignment Schemes with Authenticated Encryption, revisited</dc:title>
	<dc:creator>Pijnenburg, Jeroen</dc:creator>
	<dc:creator>Poettering, Bertram</dc:creator>
	<dc:subject xml:lang="en-US">Cryptographic Access Control</dc:subject>
	<dc:subject xml:lang="en-US">AEAD</dc:subject>
	<dc:subject xml:lang="en-US">Encryptment</dc:subject>
	<dc:subject xml:lang="en-US">Provable Security</dc:subject>
	<dc:description xml:lang="en-US">A popular cryptographic option to implement Hierarchical Access Control in organizations is to combine a key assignment scheme with a symmetric encryption scheme. In brief, key assignment associates with each object in the hierarchy a unique symmetric key, and provides all higher-ranked “authorized” subjects with a method to recover it. This setup allows for encrypting the payloads associated with the objects so that they can be accessed by the authorized and remain inaccessible for the unauthorized. Both key assignment and symmetric encryption have been researched for roughly four decades now, and a plethora of efficient constructions have been the result. Surprisingly, a treatment of the joint primitive (key assignment combined with encryption, as used in practice) in the framework of provable security was conducted only very recently, leading to a publication in ToSC 2018(4). We first carefully revisit this publication. We then argue that there are actually two standard use cases for the combined primitive, which also require individual treatment. We correspondingly propose a fresh set of security models and provably secure constructions for each of them. Perhaps surprisingly, the two constructions call for different symmetric encryption primitives: While standard AEAD is the right tool for the one, we identify a less common tool called Encryptment as best fitting the other.</dc:description>
	<dc:publisher xml:lang="en-US">Ruhr-Universität Bochum</dc:publisher>
	<dc:date>2020-07-24</dc:date>
	<dc:type>info:eu-repo/semantics/article</dc:type>
	<dc:type>info:eu-repo/semantics/publishedVersion</dc:type>
	<dc:format>application/pdf</dc:format>
	<dc:identifier>https://tosc.iacr.org/index.php/ToSC/article/view/8668</dc:identifier>
	<dc:identifier>10.13154/tosc.v2020.i2.40-67</dc:identifier>
	<dc:source xml:lang="en-US">IACR Transactions on Symmetric Cryptology; Volume 2020, Issue 2; 40-67</dc:source>
	<dc:source>2519-173X</dc:source>
	<dc:language>eng</dc:language>
	<dc:relation>https://tosc.iacr.org/index.php/ToSC/article/view/8668/8226</dc:relation>
	<dc:rights xml:lang="en-US">Copyright (c) 2020 Jeroen Pijnenburg, Bertram Poettering</dc:rights>
	<dc:rights xml:lang="en-US">http://creativecommons.org/licenses/by/4.0</dc:rights>
</oai_dc:dc>