<oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/  http://www.openarchives.org/OAI/2.0/oai_dc.xsd"><id>7266</id>
	<dc:title xml:lang="en-US">SIDH on ARM: Faster Modular Multiplications for Faster Post-Quantum Supersingular Isogeny Key Exchange</dc:title>
	<dc:creator>Seo, Hwajeong</dc:creator>
	<dc:creator>Liu, Zhe</dc:creator>
	<dc:creator>Longa, Patrick</dc:creator>
	<dc:creator>Hu, Zhi</dc:creator>
	<dc:subject xml:lang="en-US">Post-quantum cryptography</dc:subject>
	<dc:subject xml:lang="en-US">SIDH</dc:subject>
	<dc:subject xml:lang="en-US">SIKE</dc:subject>
	<dc:subject xml:lang="en-US">Montgomery multiplication</dc:subject>
	<dc:subject xml:lang="en-US">ARM</dc:subject>
	<dc:subject xml:lang="en-US">NEON</dc:subject>
	<dc:description xml:lang="en-US">We present high-speed implementations of the post-quantum supersingular isogeny Diffie-Hellman key exchange (SIDH) and the supersingular isogeny key encapsulation (SIKE) protocols for 32-bit ARMv7-A processors with NEON support. The high performance of our implementations is mainly due to carefully optimized multiprecision and modular arithmetic that finely integrates both ARM and NEON instructions in order to reduce the number of pipeline stalls and memory accesses, and a new Montgomery reduction technique that combines the use of the UMAAL instruction with a variant of the hybrid-scanning approach. In addition, we present efficient implementations of SIDH and SIKE for 64-bit ARMv8-A processors, based on a high-speed Montgomery multiplication that leverages the power of 64-bit instructions. Our experimental results consolidate the practicality of supersingular isogeny-based protocols for many real-world applications. For example, a full key-exchange execution of SIDHp503 is performed in about 176 million cycles on an ARM Cortex-A15 from the ARMv7-A family (i.e., 88 milliseconds @2.0GHz). On an ARM Cortex-A72 from the ARMv8-A family, the same operation can be carried out in about 90 million cycles (i.e., 45 milliseconds @1.992GHz). All our software is protected against timing and cache attacks. The techniques for modular multiplication presented in this work have broad applications to other cryptographic schemes.</dc:description>
	<dc:publisher xml:lang="en-US">Ruhr-Universit√§t Bochum</dc:publisher>
	<dc:date>2018-08-14</dc:date>
	<dc:type>info:eu-repo/semantics/article</dc:type>
	<dc:type>info:eu-repo/semantics/publishedVersion</dc:type>
	<dc:format>application/pdf</dc:format>
	<dc:format>application/pdf</dc:format>
	<dc:identifier>https://tches.iacr.org/index.php/TCHES/article/view/7266</dc:identifier>
	<dc:identifier>10.13154/tches.v2018.i3.1-20</dc:identifier>
	<dc:source xml:lang="en-US">IACR Transactions on Cryptographic Hardware and Embedded Systems; Volume 2018, Issue 3; 1-20</dc:source>
	<dc:source>2569-2925</dc:source>
	<dc:language>eng</dc:language>
	<dc:relation>https://tches.iacr.org/index.php/TCHES/article/view/7266/6444</dc:relation>
	<dc:relation>https://tches.iacr.org/index.php/TCHES/article/view/7266/7923</dc:relation>
	<dc:rights xml:lang="en-US">Copyright (c) 2018 Hwajeong Seo, Zhe Liu, Patrick Longa, Zhi Hu</dc:rights>
	<dc:rights xml:lang="en-US">https://creativecommons.org/licenses/by/4.0</dc:rights>
</oai_dc:dc>