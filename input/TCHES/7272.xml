<oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/  http://www.openarchives.org/OAI/2.0/oai_dc.xsd"><id>7272</id>
	<dc:title xml:lang="en-US">Persistent Fault Analysis on Block Ciphers</dc:title>
	<dc:creator>Zhang, Fan</dc:creator>
	<dc:creator>Lou, Xiaoxuan</dc:creator>
	<dc:creator>Zhao, Xinjie</dc:creator>
	<dc:creator>Bhasin, Shivam</dc:creator>
	<dc:creator>He, Wei</dc:creator>
	<dc:creator>Ding, Ruyi</dc:creator>
	<dc:creator>Qureshi, Samiya</dc:creator>
	<dc:creator>Ren, Kui</dc:creator>
	<dc:subject xml:lang="en-US">Fault Analysis</dc:subject>
	<dc:subject xml:lang="en-US">PFA</dc:subject>
	<dc:subject xml:lang="en-US">DMR</dc:subject>
	<dc:subject xml:lang="en-US">AES</dc:subject>
	<dc:subject xml:lang="en-US">Libgcrypt</dc:subject>
	<dc:subject xml:lang="en-US">Rowhammer</dc:subject>
	<dc:description xml:lang="en-US">Persistence is an intrinsic nature for many errors yet has not been caught enough attractions for years. In this paper, the feature of persistence is applied to fault attacks, and the persistent fault attack is proposed. Different from traditional fault attacks, adversaries can prepare the fault injection stage before the encryption stage, which relaxes the constraint of the tight-coupled time synchronization. The persistent fault analysis (PFA) is elaborated on different implementations of AES-128, specially fault hardened implementations based on Dual Modular Redundancy (DMR). Our experimental results show that PFA is quite simple and efficient in breaking these typical implementations. To show the feasibility and practicability of our attack, a case study is illustrated on the shared library Libgcrypt with rowhammer technique. Approximately 8200 ciphertexts are enough to extract the master key of AES-128 when PFA is applied to Libgcrypt1.6.3 with redundant encryption based DMR. This work puts forward a new direction of fault attacks and can be extended to attack other implementations under more interesting scenarios.</dc:description>
	<dc:publisher xml:lang="en-US">Ruhr-Universit√§t Bochum</dc:publisher>
	<dc:date>2018-08-14</dc:date>
	<dc:type>info:eu-repo/semantics/article</dc:type>
	<dc:type>info:eu-repo/semantics/publishedVersion</dc:type>
	<dc:format>application/pdf</dc:format>
	<dc:format>application/pdf</dc:format>
	<dc:identifier>https://tches.iacr.org/index.php/TCHES/article/view/7272</dc:identifier>
	<dc:identifier>10.13154/tches.v2018.i3.150-172</dc:identifier>
	<dc:source xml:lang="en-US">IACR Transactions on Cryptographic Hardware and Embedded Systems; Volume 2018, Issue 3; 150-172</dc:source>
	<dc:source>2569-2925</dc:source>
	<dc:language>eng</dc:language>
	<dc:relation>https://tches.iacr.org/index.php/TCHES/article/view/7272/6450</dc:relation>
	<dc:relation>https://tches.iacr.org/index.php/TCHES/article/view/7272/7934</dc:relation>
	<dc:relation>https://tches.iacr.org/index.php/TCHES/article/view/7272/7935</dc:relation>
	<dc:rights xml:lang="en-US">Copyright (c) 2018 Fan Zhang, Xiaoxuan Lou, Xinjie Zhao, Shivam Bhasin, Wei He, Ruyi Ding, Samiya Qureshi, Kui Ren</dc:rights>
	<dc:rights xml:lang="en-US">https://creativecommons.org/licenses/by/4.0</dc:rights>
</oai_dc:dc>