<oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/  http://www.openarchives.org/OAI/2.0/oai_dc.xsd"><id>7293</id>
	<dc:title xml:lang="en-US">Data Flow Oriented Hardware Design of RNS-based Polynomial Multiplication for SHE Acceleration</dc:title>
	<dc:creator>Cathébras, Joël</dc:creator>
	<dc:creator>Carbon, Alexandre</dc:creator>
	<dc:creator>Milder, Peter</dc:creator>
	<dc:creator>Sirdey, Renaud</dc:creator>
	<dc:creator>Ventroux, Nicolas</dc:creator>
	<dc:subject xml:lang="en-US">Homomorphic Encryption</dc:subject>
	<dc:subject xml:lang="en-US">Polynomial Multiplication</dc:subject>
	<dc:subject xml:lang="en-US">Residue Number System</dc:subject>
	<dc:subject xml:lang="en-US">Negative Wrapped Convolution</dc:subject>
	<dc:subject xml:lang="en-US">Hardware Implementation</dc:subject>
	<dc:description xml:lang="en-US">This paper presents a hardware implementation of a Residue Polynomial Multiplier (RPM), designed to accelerate the full Residue Number System (RNS) variant of the Fan-Vercauteren scheme proposed by Bajard et al. [BEHZ16]. Our design speeds up polynomial multiplication via a Negative Wrapped Convolution (NWC) which locally computes the required RNS channel dependent twiddle factors. Compared to related works, this design is more versatile regarding the addressable parameter sets for the BFV scheme. This is mainly brought by our proposed twiddle factor generator that makes the design BRAM utilization independent of the RNS basis size, with a negligible communication bandwidth usage for non-payload data. Furthermore, the generalization of a DFT hardware generator is explored in order to generate RNS friendly NTT architectures. This approach helps us to validate our RPM design over parameter sets from the work of Halevi et al. [HPS18]. For the depth-20 setting, we achieve an estimated speed up for the residue polynomial multiplications greater than 76 during ciphertexts multiplication, and greater than 16 during relinearization. It thus results in a single-threaded Mult&amp;amp;Relin ciphertext operation in 109.4 ms (×3.19 faster than [HPS18]) with RPM counting for less than 15% of the new computation time. Our RPM design scales up with reasonable use of hardware resources and realistic bandwidth requirements. It can also be exploited for other RNS based implementations of RLWE cryptosystems.</dc:description>
	<dc:publisher xml:lang="en-US">Ruhr-Universität Bochum</dc:publisher>
	<dc:date>2018-08-21</dc:date>
	<dc:type>info:eu-repo/semantics/article</dc:type>
	<dc:type>info:eu-repo/semantics/publishedVersion</dc:type>
	<dc:format>application/pdf</dc:format>
	<dc:format>application/pdf</dc:format>
	<dc:identifier>https://tches.iacr.org/index.php/TCHES/article/view/7293</dc:identifier>
	<dc:identifier>10.13154/tches.v2018.i3.69-88</dc:identifier>
	<dc:source xml:lang="en-US">IACR Transactions on Cryptographic Hardware and Embedded Systems; Volume 2018, Issue 3; 69-88</dc:source>
	<dc:source>2569-2925</dc:source>
	<dc:language>eng</dc:language>
	<dc:relation>https://tches.iacr.org/index.php/TCHES/article/view/7293/6467</dc:relation>
	<dc:relation>https://tches.iacr.org/index.php/TCHES/article/view/7293/7928</dc:relation>
	<dc:relation>https://tches.iacr.org/index.php/TCHES/article/view/7293/7929</dc:relation>
	<dc:rights xml:lang="en-US">Copyright (c) 2018 Joël Cathébras, Alexandre Carbon, Peter Milder, Renaud Sirdey, Nicolas Ventroux</dc:rights>
	<dc:rights xml:lang="en-US">https://creativecommons.org/licenses/by/4.0</dc:rights>
</oai_dc:dc>