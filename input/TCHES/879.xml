<oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/  http://www.openarchives.org/OAI/2.0/oai_dc.xsd"><id>879</id>
	<dc:title xml:lang="en-US">CacheQuote: Efficiently Recovering Long-term Secrets of SGX EPID via Cache Attacks</dc:title>
	<dc:creator>Dall, Fergus</dc:creator>
	<dc:creator>De Micheli, Gabrielle</dc:creator>
	<dc:creator>Eisenbarth, Thomas</dc:creator>
	<dc:creator>Genkin, Daniel</dc:creator>
	<dc:creator>Heninger, Nadia</dc:creator>
	<dc:creator>Moghimi, Ahmad</dc:creator>
	<dc:creator>Yarom, Yuval</dc:creator>
	<dc:subject xml:lang="en-US">SGX</dc:subject>
	<dc:subject xml:lang="en-US">Side-Channel attacks</dc:subject>
	<dc:subject xml:lang="en-US">EPID</dc:subject>
	<dc:subject xml:lang="en-US">hidden number problem</dc:subject>
	<dc:subject xml:lang="en-US">Zero-Knowledge Proofs</dc:subject>
	<dc:description xml:lang="en-US">Intel Software Guard Extensions (SGX) allows users to perform secure computation on platforms that run untrusted software. To validate that the computation is correctly initialized and that it executes on trusted hardware, SGX supports attestation providers that can vouch for the user’s computation. Communication with these attestation providers is based on the Extended Privacy ID (EPID) protocol, which not only validates the computation but is also designed to maintain the user’s privacy. In particular, EPID is designed to ensure that the attestation provider is unable to identify the host on which the computation executes. In this work we investigate the security of the Intel implementation of the EPID protocol. We identify an implementation weakness that leaks information via a cache side channel. We show that a malicious attestation provider can use the leaked information to break the unlinkability guarantees of EPID. We analyze the leaked information using a lattice-based approach for solving the hidden number problem, which we adapt to the zero-knowledge proof in the EPID scheme, extending prior attacks on signature schemes.</dc:description>
	<dc:publisher xml:lang="en-US">Ruhr-Universität Bochum</dc:publisher>
	<dc:date>2018-05-08</dc:date>
	<dc:type>info:eu-repo/semantics/article</dc:type>
	<dc:type>info:eu-repo/semantics/publishedVersion</dc:type>
	<dc:format>application/pdf</dc:format>
	<dc:format>application/pdf</dc:format>
	<dc:identifier>https://tches.iacr.org/index.php/TCHES/article/view/879</dc:identifier>
	<dc:identifier>10.13154/tches.v2018.i2.171-191</dc:identifier>
	<dc:source xml:lang="en-US">IACR Transactions on Cryptographic Hardware and Embedded Systems; Volume 2018, Issue 2; 171-191</dc:source>
	<dc:source>2569-2925</dc:source>
	<dc:language>eng</dc:language>
	<dc:relation>https://tches.iacr.org/index.php/TCHES/article/view/879/831</dc:relation>
	<dc:relation>https://tches.iacr.org/index.php/TCHES/article/view/879/7982</dc:relation>
	<dc:relation>https://tches.iacr.org/index.php/TCHES/article/view/879/7983</dc:relation>
	<dc:rights xml:lang="en-US">Copyright (c) 2018 Fergus Dall, Gabrielle De Micheli, Thomas Eisenbarth, Daniel Genkin, Nadia Heninger, Ahmad Moghimi, Yuval Yarom</dc:rights>
	<dc:rights xml:lang="en-US">https://creativecommons.org/licenses/by/4.0</dc:rights>
</oai_dc:dc>