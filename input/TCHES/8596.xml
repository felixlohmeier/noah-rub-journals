<oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/  http://www.openarchives.org/OAI/2.0/oai_dc.xsd"><id>8596</id>
	<dc:title xml:lang="en-US">From A to Z: Projective coordinates leakage in the wild</dc:title>
	<dc:creator>Cabrera Aldaya, Alejandro</dc:creator>
	<dc:creator>Pereida García, Cesar</dc:creator>
	<dc:creator>Brumley, Billy Bob</dc:creator>
	<dc:subject xml:lang="en-US">applied cryptography</dc:subject>
	<dc:subject xml:lang="en-US">projective coordinates leak</dc:subject>
	<dc:subject xml:lang="en-US">open source libraries</dc:subject>
	<dc:subject xml:lang="en-US">side-channel analysis</dc:subject>
	<dc:subject xml:lang="en-US">ECDSA</dc:subject>
	<dc:subject xml:lang="en-US">modular inversion</dc:subject>
	<dc:subject xml:lang="en-US">binary GCD</dc:subject>
	<dc:subject xml:lang="en-US">libgcrypt</dc:subject>
	<dc:subject xml:lang="en-US">CVE-2020-10932</dc:subject>
	<dc:subject xml:lang="en-US">CVE-2020-11735</dc:subject>
	<dc:description xml:lang="en-US">At EUROCRYPT 2004, Naccache et al. showed that the projective coordinates representation of the resulting point of an elliptic curve scalar multiplication potentially allows to recover some bits of the scalar. However, this attack has received little attention by the scientific community, and the status of deployed mitigations to prevent it in widely adopted cryptography libraries is unknown. In this paper, we aim to fill this gap, by analyzing several cryptography libraries in this context. To demonstrate the applicability of the attack, we use a side-channel attack to exploit this vulnerability within libgcrypt in the context of ECDSA. To the best of our knowledge, this is the first practical attack instance. It targets the insecure binary extended Euclidean algorithm implementation using a microarchitectural side-channel attack that allows recovering the projective representation of the output point of scalar multiplication during ECDSA signature generation. We captured 100k traces to estimate the number of traces an attacker would need to compromise the libgcrypt ECDSA implementation, resulting in less than 2k for commonly used elliptic curve secp256r1, demonstrating the attack feasibility. During exploitation, we found two additional vulnerabilities. However, we remark the purpose of this paper is not merely exploiting a library but about providing an analysis on the projective coordinates vulnerability status in widely deployed open-source libraries, filling a gap between its original description in the academic literature and the adoption of countermeasures to thwart it in real-world applications.</dc:description>
	<dc:publisher xml:lang="en-US">Ruhr-Universität Bochum</dc:publisher>
	<dc:date>2020-06-19</dc:date>
	<dc:type>info:eu-repo/semantics/article</dc:type>
	<dc:type>info:eu-repo/semantics/publishedVersion</dc:type>
	<dc:format>application/pdf</dc:format>
	<dc:identifier>https://tches.iacr.org/index.php/TCHES/article/view/8596</dc:identifier>
	<dc:identifier>10.13154/tches.v2020.i3.428-453</dc:identifier>
	<dc:source xml:lang="en-US">IACR Transactions on Cryptographic Hardware and Embedded Systems; Volume 2020, Issue 3; 428-453</dc:source>
	<dc:source>2569-2925</dc:source>
	<dc:language>eng</dc:language>
	<dc:relation>https://tches.iacr.org/index.php/TCHES/article/view/8596/8163</dc:relation>
	<dc:rights xml:lang="en-US">Copyright (c) 2020 Alejandro Cabrera Aldaya, Cesar Pereida García, Billy Bob Brumley</dc:rights>
	<dc:rights xml:lang="en-US">https://creativecommons.org/licenses/by/4.0</dc:rights>
</oai_dc:dc>