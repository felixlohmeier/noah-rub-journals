<oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/  http://www.openarchives.org/OAI/2.0/oai_dc.xsd"><id>8970</id>
	<dc:title xml:lang="en-US">Classic McEliece on the ARM Cortex-M4</dc:title>
	<dc:creator>Chen, Ming-Shing</dc:creator>
	<dc:creator>Chou, Tung</dc:creator>
	<dc:subject xml:lang="en-US">Classic McEliece</dc:subject>
	<dc:subject xml:lang="en-US">Cortex-M4</dc:subject>
	<dc:subject xml:lang="en-US">Constant-time implementations</dc:subject>
	<dc:subject xml:lang="en-US">NIST PQC standardization</dc:subject>
	<dc:description xml:lang="en-US">This paper presents a constant-time implementation of Classic McEliece for ARM Cortex-M4. Specifically, our target platform is stm32f4-Discovery, a development board on which the amount of SRAM is not even large enough to hold the public key of the smallest parameter sets of Classic McEliece. Fortunately, the flash memory is large enough, so we use it to store the public key. For the level-1 parameter sets mceliece348864 and mceliece348864f, our implementation takes 582 199 cycles for encapsulation and 2 706 681 cycles for decapsulation. Compared to the level-1 parameter set of FrodoKEM, our encapsulation time is more than 80 times faster, and our decapsulation time is more than 17 times faster. For the level-3 parameter sets mceliece460896 and mceliece460896f, our implementation takes 1 081 335 cycles for encapsulation and 6 535 186 cycles for decapsulation. In addition, our implementation is also able to carry out key generation for the level-1 parameter sets and decapsulation for level-5 parameter sets on the board.</dc:description>
	<dc:publisher xml:lang="en-US">Ruhr-Universit√§t Bochum</dc:publisher>
	<dc:date>2021-07-09</dc:date>
	<dc:type>info:eu-repo/semantics/article</dc:type>
	<dc:type>info:eu-repo/semantics/publishedVersion</dc:type>
	<dc:format>application/pdf</dc:format>
	<dc:identifier>https://tches.iacr.org/index.php/TCHES/article/view/8970</dc:identifier>
	<dc:identifier>10.46586/tches.v2021.i3.125-148</dc:identifier>
	<dc:source xml:lang="en-US">IACR Transactions on Cryptographic Hardware and Embedded Systems; Volume 2021, Issue 3; 125-148</dc:source>
	<dc:source>2569-2925</dc:source>
	<dc:language>eng</dc:language>
	<dc:relation>https://tches.iacr.org/index.php/TCHES/article/view/8970/8548</dc:relation>
	<dc:rights xml:lang="en-US">Copyright (c) 2021 Ming-Shing Chen, Tung Chou</dc:rights>
	<dc:rights xml:lang="en-US">https://creativecommons.org/licenses/by/4.0/</dc:rights>
</oai_dc:dc>