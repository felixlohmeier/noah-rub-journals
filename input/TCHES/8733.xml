<oai_dc:dc xmlns:oai_dc="http://www.openarchives.org/OAI/2.0/oai_dc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.openarchives.org/OAI/2.0/oai_dc/  http://www.openarchives.org/OAI/2.0/oai_dc.xsd"><id>8733</id>
	<dc:title xml:lang="en-US">Polynomial Multiplication in NTRU Prime: Comparison of Optimization Strategies on Cortex-M4</dc:title>
	<dc:creator>Alkim, Erdem</dc:creator>
	<dc:creator>Cheng, Dean Yun-Li </dc:creator>
	<dc:creator>Chung, Chi-Ming Marvin</dc:creator>
	<dc:creator>Evkan, Hülya</dc:creator>
	<dc:creator>Huang, Leo Wei-Lun </dc:creator>
	<dc:creator>Hwang, Vincent</dc:creator>
	<dc:creator>Li, Ching-Lin Trista</dc:creator>
	<dc:creator>Niederhagen, Ruben</dc:creator>
	<dc:creator>Shih, Cheng-Jhih</dc:creator>
	<dc:creator>Wälde, Julian</dc:creator>
	<dc:creator>Yang, Bo-Yin </dc:creator>
	<dc:subject xml:lang="en-US">NTT</dc:subject>
	<dc:subject xml:lang="en-US">polynomial multiplication</dc:subject>
	<dc:subject xml:lang="en-US">Cortex-M4</dc:subject>
	<dc:subject xml:lang="en-US">NTRU Prime</dc:subject>
	<dc:subject xml:lang="en-US">PQC</dc:subject>
	<dc:description xml:lang="en-US">This paper proposes two different methods to perform NTT-based polynomial multiplication in polynomial rings that do not naturally support such a multiplication. We demonstrate these methods on the NTRU Prime key-encapsulation mechanism (KEM) proposed by Bernstein, Chuengsatiansup, Lange, and Vredendaal, which uses a polynomial ring that is, by design, not amenable to use with NTT. One of our approaches is using Good’s trick and focuses on speed and supporting more than one parameter set with a single implementation. The other approach is using a mixed radix NTT and focuses on the use of smaller multipliers and less memory. On a ARM Cortex-M4 microcontroller, we show that our three NTT-based implementations, one based on Good’s trick and two mixed radix NTTs, provide between 32% and 17% faster polynomial multiplication. For the parameter-set ntrulpr761, this results in between 16% and 9% faster total operations (sum of key generation, encapsulation, and decapsulation) and requires between 15% and 39% less memory than the current state-of-the-art NTRU Prime implementation on this platform, which is using Toom-Cook-based polynomial multiplication.</dc:description>
	<dc:publisher xml:lang="en-US">Ruhr-Universität Bochum</dc:publisher>
	<dc:date>2020-12-03</dc:date>
	<dc:type>info:eu-repo/semantics/article</dc:type>
	<dc:type>info:eu-repo/semantics/publishedVersion</dc:type>
	<dc:format>application/pdf</dc:format>
	<dc:identifier>https://tches.iacr.org/index.php/TCHES/article/view/8733</dc:identifier>
	<dc:identifier>10.46586/tches.v2021.i1.217-238</dc:identifier>
	<dc:source xml:lang="en-US">IACR Transactions on Cryptographic Hardware and Embedded Systems; Volume 2021, Issue 1; 217-238</dc:source>
	<dc:source>2569-2925</dc:source>
	<dc:language>eng</dc:language>
	<dc:relation>https://tches.iacr.org/index.php/TCHES/article/view/8733/8333</dc:relation>
	<dc:relation>https://tches.iacr.org/index.php/TCHES/article/view/8733/8602</dc:relation>
	<dc:rights xml:lang="en-US">Copyright (c) 2020 Erdem Alkim, Dean Yun-Li Cheng, Chi-Ming Marvin Chung, Hülya Evkan, Leo Wei-Lun Huang, Vincent Hwang, Ching-Lin Trista Li, Ruben Niederhagen, Cheng-Jhih Shih, Julian Wälde, Bo-Yin Yang</dc:rights>
	<dc:rights xml:lang="en-US">https://creativecommons.org/licenses/by/4.0/</dc:rights>
</oai_dc:dc>